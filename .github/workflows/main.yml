name: CI
on:
  push:
    branches: [ "main" ]
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    #   ubuntu-latest должна работать стабильно, можно указать явно другую версию
    #   steps можно сильнее разбить на категории
    #   тут представлен пример только для запуска тестов. Можно еще проверять код-стайл и доступность документации
    #   часто встречается на рабочих проектах
    steps:
      - uses: actions/checkout@v4
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4.5'
          extensions: mbstring, xml, ctype, iconv, intl, pdo_mysql
          coverage: pcov
          tools: composer
      - name: Setting environment and composer
        run: |
          echo "DATABASE_URL=pgsql://pguser:pguser@postgres:5432/study_on" >> .env.local
          composer install
      - name: Setting Docker
        run: |
               sudo curl -L "https://github.com/docker/compose/releases/download/v2.27.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
               sudo chmod +x /usr/local/bin/docker-compose
               docker-compose --version
               mkdir ~/.yarn
          # нужно создать сеть, так как в github Actions study-on изолирован от биллинга
               docker network create study-onbilling_default
               docker-compose build
               docker-compose up -d
               docker-compose run -u root node yarn install
               docker-compose run -u root node yarn encore dev
               docker ps -a
      - name: Fix console permissions
        run: |
          # Меняем владельца и права через root в контейнере
          docker-compose exec -T --user root php bash -c "chown www-data:www-data /app/bin/console && chmod 755 /app/bin/console"
          # Проверяем
          docker-compose exec -T php ls -la /app/bin/console
      - name: Fix test permissions
        run: |
          # Исправляем права для phpunit
          docker-compose exec -T --user root php bash -c "chmod +x /app/bin/phpunit && chown www-data:www-data /app/bin/phpunit"
          # Проверяем права
          docker-compose exec -T php ls -la /app/bin/phpunit
      - name: Setting test environment and DB
        # скорректируйте название БД и контейнера, если нужно
        run: |
          echo "DATABASE_URL=pgsql://pguser:pguser@postgres:5432/study_on" >> .env.test.local
          ls -la
          docker ps -a
          docker-compose exec -T--user www-data php bin/console doctrine:database:drop --force --env=test || true
          docker-compose exec -T--user www-data php bin/console doctrine:database:create --env=test
          docker-compose exec -T--user www-data php bin/console doctrine:migrations:migrate -n --env=test
          docker-compose exec -T--user www-data php bin/console doctrine:fixtures:load -n --env=test
      - name: run PHPUnit
        run: |
          docker-compose exec -T php bin/phpunit
