name: CI
on:
  push:
    branches: [ "main" ]
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4.5'
          extensions: mbstring, xml, ctype, iconv, intl, pdo_pgsql
          coverage: pcov
          tools: composer

      - name: Setting environment and composer
        run: |
          echo "DATABASE_URL=pgsql://pguser:pguser@postgres:5432/study_on" >> .env.local
          composer install

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: Start Docker services
        run: |
          mkdir -p ~/.yarn
          docker network create study-billing_default || true
          docker-compose up -d --build postgres php nginx
          docker-compose run -d --name study-on-node node
          sleep 15

      - name: Install Node dependencies
        run: |
          # Устанавливаем зависимости от имени root
          docker-compose exec -T node yarn install --cache-folder /app/.yarn-cache --network-timeout 1000000
          docker-compose exec -T node yarn add @symfony/stimulus-bundle @hotwired/stimulus --dev --cache-folder /app/.yarn-cache
          
          # Меняем владельца файлов на стандартного пользователя (UID 1000)
          docker-compose exec -T node chown -R 1000:1000 /app/node_modules /app/.yarn-cache
          
          # Запускаем encore от имени пользователя node
          docker-compose exec -T -u node node yarn encore dev

      - name: Fix permissions
        run: |
          docker-compose exec -T php bash -c "chown www-data:www-data /app/bin/console && chmod 755 /app/bin/console"
          docker-compose exec -T php bash -c "chmod +x /app/bin/phpunit && chown www-data:www-data /app/bin/phpunit"

      - name: Clear cache
        run: |
          docker-compose exec -T php bin/console cache:clear --env=test

      - name: Setting test environment and DB
        run: |
          echo "DATABASE_URL=pgsql://pguser:pguser@postgres:5432/study_on_test" >> .env.test.local
          docker-compose exec -T php bin/console doctrine:database:drop --force --env=test || true
          docker-compose exec -T php bin/console doctrine:database:create --env=test
          docker-compose exec -T php bin/console doctrine:migrations:migrate -n --env=test
          docker-compose exec -T php bin/console doctrine:fixtures:load -n --env=test

      - name: Run PHPUnit
        run: |
          docker-compose exec -T php bin/phpunit
